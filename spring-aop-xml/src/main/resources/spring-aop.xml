<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 扫描基础包 -->
    <context:component-scan base-package="com.ymdx.spring.aop.xml"/>

    <!-- 开启aop -->
    <aop:aspectj-autoproxy />

    <!-- 配置bean -->
    <bean id="bizService" class="com.ymdx.spring.aop.xml.demo01.BizServiceImpl" />
    <bean id="logAspect" class="com.ymdx.spring.aop.xml.demo01.LogAspect" />

    <!-- aop配置 -->
    <aop:config>
        <!-- 定义一个切入点表达式：用于拦截哪些方法 -->
        <aop:pointcut id="logPointcut" expression="execution(* com.ymdx.spring.aop.xml.demo01.BizServiceImpl.process(..))"/>
        <!-- 注册切面 -->
        <aop:aspect ref="logAspect">
            <!-- 前置通知 -->
            <aop:before method="before" pointcut-ref="logPointcut" />
            <!-- 后置通知 -->
            <aop:after method="after" pointcut-ref="logPointcut" />
            <!-- 运行通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="logPointcut" />
            <!-- 异常通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="logPointcut" />
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="logPointcut" />
        </aop:aspect>
    </aop:config>


</beans>